// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyWeb.Persistence.Catalog;

#nullable disable

namespace MyWeb.Persistence.Migrations.Catalog
{
    [DbContext(typeof(CatalogDbContext))]
    [Migration("20250812134653_InitialCatalog")]
    partial class InitialCatalog
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("catalog")
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyWeb.Persistence.Catalog.Entities.Controller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("SettingsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Controllers", "catalog");
                });

            modelBuilder.Entity("MyWeb.Persistence.Catalog.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime2(3)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("MinEngine")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("Projects", "catalog");
                });

            modelBuilder.Entity("MyWeb.Persistence.Catalog.Entities.ProjectVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AppliedUtc")
                        .HasColumnType("datetime2(3)");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectVersions", "catalog");
                });

            modelBuilder.Entity("MyWeb.Persistence.Catalog.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<byte>("DataType")
                        .HasColumnType("tinyint");

                    b.Property<string>("DriverRef")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("LongString")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<double?>("Offset")
                        .HasColumnType("float");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<double?>("Scale")
                        .HasColumnType("float");

                    b.Property<string>("Unit")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId", "Path")
                        .IsUnique();

                    b.ToTable("Tags", "catalog");
                });

            modelBuilder.Entity("MyWeb.Persistence.Catalog.Entities.TagArchiveConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("DeadbandAbs")
                        .HasColumnType("float");

                    b.Property<double?>("DeadbandPercent")
                        .HasColumnType("float");

                    b.Property<byte>("Mode")
                        .HasColumnType("tinyint");

                    b.Property<int?>("RetentionDays")
                        .HasColumnType("int");

                    b.Property<string>("RollupsJson")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TagId")
                        .IsUnique();

                    b.ToTable("TagArchiveConfigs", "catalog");
                });

            modelBuilder.Entity("MyWeb.Persistence.Catalog.Entities.Controller", b =>
                {
                    b.HasOne("MyWeb.Persistence.Catalog.Entities.Project", "Project")
                        .WithMany("Controllers")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("MyWeb.Persistence.Catalog.Entities.ProjectVersion", b =>
                {
                    b.HasOne("MyWeb.Persistence.Catalog.Entities.Project", "Project")
                        .WithMany("Versions")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("MyWeb.Persistence.Catalog.Entities.Tag", b =>
                {
                    b.HasOne("MyWeb.Persistence.Catalog.Entities.Project", "Project")
                        .WithMany("Tags")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("MyWeb.Persistence.Catalog.Entities.TagArchiveConfig", b =>
                {
                    b.HasOne("MyWeb.Persistence.Catalog.Entities.Tag", "Tag")
                        .WithOne("Archive")
                        .HasForeignKey("MyWeb.Persistence.Catalog.Entities.TagArchiveConfig", "TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("MyWeb.Persistence.Catalog.Entities.Project", b =>
                {
                    b.Navigation("Controllers");

                    b.Navigation("Tags");

                    b.Navigation("Versions");
                });

            modelBuilder.Entity("MyWeb.Persistence.Catalog.Entities.Tag", b =>
                {
                    b.Navigation("Archive");
                });
#pragma warning restore 612, 618
        }
    }
}
