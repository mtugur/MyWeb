// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyWeb.Persistence.Historian;

#nullable disable

namespace MyWeb.Persistence.Migrations.Historian
{
    [DbContext(typeof(HistorianDbContext))]
    partial class HistorianDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("hist")
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyWeb.Persistence.Historian.Entities.Sample", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte>("DataType")
                        .HasColumnType("tinyint");

                    b.Property<int>("MonthKey")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasComputedColumnSql("(YEAR([Utc])*100 + MONTH([Utc]))", true);

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<short>("Quality")
                        .HasColumnType("smallint");

                    b.Property<byte?>("Source")
                        .HasColumnType("tinyint");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Utc")
                        .HasColumnType("datetime2(3)");

                    b.Property<bool?>("ValueBool")
                        .HasColumnType("bit");

                    b.Property<double?>("ValueNumeric")
                        .HasColumnType("float");

                    b.Property<string>("ValueText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("MonthKey");

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("MonthKey"), new[] { "TagId", "Utc", "ValueNumeric", "Quality" });

                    b.HasIndex("TagId", "Utc");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("TagId", "Utc"));

                    b.ToTable("Samples", "hist");
                });
#pragma warning restore 612, 618
        }
    }
}
